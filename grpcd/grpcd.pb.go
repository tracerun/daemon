// Code generated by protoc-gen-go.
// source: grpcd.proto
// DO NOT EDIT!

/*
Package grpcd is a generated protocol buffer package.

It is generated from these files:
	grpcd.proto

It has these top-level messages:
	Action
	Empty
*/
package grpcd

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Action struct {
	Target    string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Type      int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Action) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Action) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Action) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Action)(nil), "Action")
	proto.RegisterType((*Empty)(nil), "Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ActionService service

type ActionServiceClient interface {
	SendAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Empty, error)
}

type actionServiceClient struct {
	cc *grpc.ClientConn
}

func NewActionServiceClient(cc *grpc.ClientConn) ActionServiceClient {
	return &actionServiceClient{cc}
}

func (c *actionServiceClient) SendAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/ActionService/SendAction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ActionService service

type ActionServiceServer interface {
	SendAction(context.Context, *Action) (*Empty, error)
}

func RegisterActionServiceServer(s *grpc.Server, srv ActionServiceServer) {
	s.RegisterService(&_ActionService_serviceDesc, srv)
}

func _ActionService_SendAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionServiceServer).SendAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ActionService/SendAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionServiceServer).SendAction(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ActionService",
	HandlerType: (*ActionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendAction",
			Handler:    _ActionService_SendAction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcd.proto",
}

func init() { proto.RegisterFile("grpcd.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2f, 0x2a, 0x48,
	0x4e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe2, 0x62, 0x73, 0x4c, 0x2e, 0xc9, 0xcc,
	0xcf, 0x13, 0x12, 0xe3, 0x62, 0x2b, 0x49, 0x2c, 0x4a, 0x4f, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0xf2, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x98, 0x14, 0x18,
	0x35, 0x58, 0x83, 0xc0, 0x6c, 0x21, 0x19, 0x2e, 0xce, 0x92, 0xcc, 0xdc, 0xd4, 0xe2, 0x92, 0xc4,
	0xdc, 0x02, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x84, 0x80, 0x12, 0x3b, 0x17, 0xab, 0x6b,
	0x6e, 0x41, 0x49, 0xa5, 0x91, 0x1e, 0x17, 0x2f, 0xc4, 0xf0, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4,
	0x54, 0x21, 0x59, 0x2e, 0xae, 0xe0, 0xd4, 0xbc, 0x14, 0xa8, 0x8d, 0xec, 0x7a, 0x10, 0x86, 0x14,
	0x9b, 0x1e, 0x58, 0x7d, 0x12, 0x1b, 0xd8, 0x4d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3a,
	0xe4, 0x80, 0x9d, 0xa2, 0x00, 0x00, 0x00,
}
